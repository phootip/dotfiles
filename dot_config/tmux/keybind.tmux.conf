# unbind C-b
# set -g prefix C-a
# set-option -gw xterm-keys on

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|lazygit|lazydocker|k9s)(diff)?$'"
# vim-style terminal navigation
# bind-key -n 'Escape' if-shell "$is_vim" 'send-keys Escape' 'copy-mode'
bind-key -T prefix 'Escape' copy-mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
unbind-key -T copy-mode-vi M-y
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'H' send -X back-to-indentation
bind-key -T copy-mode-vi 'L' send -X end-of-line

bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# resize pane
bind-key -r > resize-pane -R 15
bind-key -r < resize-pane -L 15
bind-key -r - resize-pane -D 2
bind-key -r = resize-pane -U 2

# reorder pane
bind-key -r Space next-layout
bind-key b setw synchronize-panes

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

bind-key -n 'M-9' switch-client -l
# bind-key -n 'M-l' next-window
# bind-key -n 'M-h' previous-window
bind-key -n 'M-y' previous-window
bind-key -n 'M-o' next-window

# bind-key -n ^n next-window
# bind-key -n ^p previous-window
bind-key -r n next-window
bind-key -r p previous-window
bind-key -n C-Tab next-window
bind-key -n C-S-Tab previous-window
bind-key -n C-BTab previous-window

set-option -g renumber-windows on
bind-key -r T swap-window -t -1\; select-window -t -1
bind-key -r t swap-window -t +1\; select-window -t +1

# bind-key -n C-l if-shell -F "#{window_zoomed_flag}"  'select-pane -t :.+; resize-pane -Z'     'select-pane -t :.+'

# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-h' if-shell "$is_vim" {
  send-keys C-h
}{
  if-shell -F "#{window_zoomed_flag}"  'select-pane -L; resize-pane -Z'     'select-pane -L'
}

bind-key -n 'C-j' if-shell "$is_vim" {
  send-keys C-j
}{
  if-shell -F "#{window_zoomed_flag}"  'select-pane -D; resize-pane -Z'     'select-pane -D'
}

bind-key -n 'C-k' if-shell "$is_vim" {
  send-keys C-k
}{
  if-shell -F "#{window_zoomed_flag}"  'select-pane -U; resize-pane -Z'     'select-pane -U'
}

bind-key -n 'C-l' if-shell "$is_vim" {
  send-keys C-l
}{
  if-shell -F "#{window_zoomed_flag}"  'select-pane -R; resize-pane -Z'     'select-pane -R'
}

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

set -g detach-on-destroy off
bind-key "C-f" run-shell "sesh connect \"$(
	sesh list -tz --icons | fzf-tmux -p 80%,70% \
		--no-sort --ansi --border-label ' sesh ' --prompt '⚡  ' \
		--header '  ^a all ^t tmux ^x zoxide ^d tmux kill' \
		--bind 'tab:down,btab:up' \
		--bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list -tz --icons)' \
		--bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t --icons)' \
		--bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list -tz --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""

# Navi shortcut
bind-key -T prefix C-n display-popup -w 90% -h 90% -E \
  'navi --query "phootip " --print | tmux load-buffer -b tmp - ; tmux paste-buffer -p -b tmp -d ; tmux send-keys BSpace'
